!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/denisvolchugin/Github/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210912.0/
#	mac_os/.vimrc	/^map #  <Plug>(incsearch-nohl-#)$/;"	m
#	mac_os/.vimrc	/^nnoremap # :silent call KeywordsAll()<CR> #$/;"	m
*	mac_os/.vimrc	/^map *  <Plug>(incsearch-nohl-*)$/;"	m
*	mac_os/.vimrc	/^nnoremap * :silent call KeywordsAll()<CR> *$/;"	m
/	mac_os/.vimrc	/^map \/  <Plug>(incsearch-forward)$/;"	m
<C-*>g	mac_os/.vimrc	/^nmap <C-*>g :cs find g <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-C>	mac_os/.vimrc	/^vnoremap <C-C> :w !xclip -i -sel c<CR><CR>$/;"	m
<C-Down>	mac_os/.vimrc	/^nmap <C-Down> ]e$/;"	m
<C-Down>	mac_os/.vimrc	/^vmap <C-Down> ]egv$/;"	m
<C-S-Down>	mac_os/.vimrc	/^noremap <C-S-Down> YP$/;"	m
<C-S-Left>	mac_os/.vimrc	/^noremap <C-S-Left> <C-w>R$/;"	m
<C-S-Right>	mac_os/.vimrc	/^noremap <C-S-Right> <C-w>r$/;"	m
<C-S-Up>	mac_os/.vimrc	/^noremap <C-S-Up> YP$/;"	m
<C-Space>	mac_os/.vimrc	/^inoremap <C-Space> <C-x><C-o>$/;"	m
<C-Tab>	mac_os/.vimrc	/^nnoremap <C-Tab> :tabn<CR>$/;"	m
<C-Up>	mac_os/.vimrc	/^nmap <C-Up> [e$/;"	m
<C-Up>	mac_os/.vimrc	/^vmap <C-Up> [egv$/;"	m
<C-e>	mac_os/.vimrc	/^nnoremap <C-e> 3<C-e>$/;"	m
<C-h>	mac_os/.vimrc	/^noremap <C-h> <C-w>h$/;"	m
<C-j>	mac_os/.vimrc	/^noremap <C-j> <C-w>j$/;"	m
<C-k>	mac_os/.vimrc	/^noremap <C-k> <C-w>k$/;"	m
<C-l>	mac_os/.vimrc	/^noremap <C-l> <C-w>l$/;"	m
<C-t>	mac_os/.vimrc	/^nnoremap <C-t> :NERDTreeToggle<CR>$/;"	m
<C-y>	mac_os/.vimrc	/^nnoremap <C-y> 3<C-y>$/;"	m
<F3>	mac_os/.vimrc	/^map <silent> <F3> :call DisplayTag()<CR>$/;"	m
<F4>	mac_os/.vimrc	/^map <F4> <leader>ci<CR>$/;"	m
<F4>	mac_os/.vimrc	/^map <silent> <F4> :call DisplayGivenTag()<CR>$/;"	m
<F5>	mac_os/.vimrc	/^nnoremap <F5> :ConqueTermSplit ipython<CR>$/;"	m
<F5>	mac_os/.vimrc	/^nnoremap <silent> <F5> :call RebuildTags()<CR>$/;"	m
<F6>	mac_os/.vimrc	/^map <F6> <ESC>:Autopep8<CR>:w<CR>:call RunPython()<CR>$/;"	m
<F6>	mac_os/.vimrc	/^nnoremap <F6> :exe "ConqueTermSplit ipython " . expand("%")<CR>$/;"	m
<F8>	mac_os/.vimrc	/^nmap <F8> :TagbarToggle<CR>$/;"	m
<S-DOWN>	mac_os/.vimrc	/^vmap  <expr>  <S-DOWN>   DVB_Drag('down')$/;"	m
<S-LEFT>	mac_os/.vimrc	/^vmap  <expr>  <S-LEFT>   DVB_Drag('left')$/;"	m
<S-RIGHT>	mac_os/.vimrc	/^vmap  <expr>  <S-RIGHT>  DVB_Drag('right')$/;"	m
<S-UP>	mac_os/.vimrc	/^vmap  <expr>  <S-UP>     DVB_Drag('up')$/;"	m
<c-x><c-f>	mac_os/.vimrc	/^imap <c-x><c-f> <plug>(fzf-complete-path)$/;"	m
<c-x><c-k>	mac_os/.vimrc	/^imap <c-x><c-k> <plug>(fzf-complete-word)$/;"	m
<c-x><c-l>	mac_os/.vimrc	/^imap <c-x><c-l> <plug>(fzf-complete-line)$/;"	m
<down>	mac_os/.vimrc	/^nnoremap <down> gj$/;"	m
<leader>(	mac_os/.vimrc	/^map <leader>( vi(xi  P$/;"	m
<leader>+	mac_os/.vimrc	/^nnoremap <silent> <leader>+ :exe "resize " . (winheight(0) * 3\/2)<CR>$/;"	m
<leader>-	mac_os/.vimrc	/^nnoremap <silent> <leader>- :exe "resize " . (winheight(0) * 2\/3)<CR>$/;"	m
<leader><tab>	mac_os/.vimrc	/^nmap <leader><tab> <plug>(fzf-maps-n)$/;"	m
<leader><tab>	mac_os/.vimrc	/^omap <leader><tab> <plug>(fzf-maps-o)$/;"	m
<leader><tab>	mac_os/.vimrc	/^xmap <leader><tab> <plug>(fzf-maps-x)$/;"	m
<leader>Tc	mac_os/.vimrc	/^nnoremap <leader>Tc :set ft=css<CR>$/;"	m
<leader>Td	mac_os/.vimrc	/^nnoremap <leader>Td :set ft=django<CR>$/;"	m
<leader>Th	mac_os/.vimrc	/^nnoremap <leader>Th :set ft=htmljinja<CR>$/;"	m
<leader>Tj	mac_os/.vimrc	/^nnoremap <leader>Tj :set ft=javascript<CR>$/;"	m
<leader>Tp	mac_os/.vimrc	/^nnoremap <leader>Tp :set ft=python<CR>$/;"	m
<leader>a	mac_os/.vimrc	/^nnoremap <leader>a :tab split<CR>:Ack<Space>$/;"	m
<leader>aw	mac_os/.vimrc	/^nnoremap <leader>aw :silent call KeywordsAll()<CR> :tab split<CR>:Ack<cword><CR> :silent call Ke/;"	m
<leader>bd	mac_os/.vimrc	/^map <leader>bd :BD<CR>$/;"	m
<leader>bn	mac_os/.vimrc	/^map <leader>bn :BF<CR>$/;"	m
<leader>bp	mac_os/.vimrc	/^map <leader>bp :BB<CR>$/;"	m
<leader>bt	mac_os/.vimrc	/^noremap <silent> <leader>bt :CtrlPBuffer<CR>$/;"	m
<leader>c	mac_os/.vimrc	/^nnoremap <leader>c :set nolist!<CR>$/;"	m
<leader>es	mac_os/.vimrc	/^nnoremap <silent> <leader>es :Esformatter<CR>$/;"	m
<leader>es	mac_os/.vimrc	/^vnoremap <silent> <leader>es :EsformatterVisual<CR>$/;"	m
<leader>et	mac_os/.vimrc	/^noremap <silent> <leader>et :call ToggleExpandTab()<CR>$/;"	m
<leader>f	mac_os/.vimrc	/^nnoremap <silent> <leader>f :FZF<CR>$/;"	m
<leader>gu	mac_os/.vimrc	/^nnoremap <leader>gu :GundoToggle<CR>$/;"	m
<leader>i	mac_os/.vimrc	/^noremap <leader>i :split<cr>$/;"	m
<leader>ic	mac_os/.vimrc	/^noremap <silent> <leader>ic :call IncludeStatic()<CR>$/;"	m
<leader>lc	mac_os/.vimrc	/^noremap <silent><leader>lc :lcl<CR>$/;"	m
<leader>ln	mac_os/.vimrc	/^noremap <silent><leader>ln :lnext<CR>$/;"	m
<leader>lo	mac_os/.vimrc	/^noremap <silent><leader>lo :Errors<CR> :lw<CR>$/;"	m
<leader>lp	mac_os/.vimrc	/^noremap <silent><leader>lp :lprev<CR>$/;"	m
<leader>ls	mac_os/.vimrc	/^nmap <leader>ls :call ListTrans_toggle_format()<CR>$/;"	m
<leader>ls	mac_os/.vimrc	/^vmap <leader>ls :call ListTrans_toggle_format('visual')<CR>$/;"	m
<leader>md	mac_os/.vimrc	/^vnoremap <silent> <leader>md :! mdown<CR>$/;"	m
<leader>mds	mac_os/.vimrc	/^noremap <silent> <leader>mds :call SanitizeMdown()<CR>$/;"	m
<leader>n	mac_os/.vimrc	/^nnoremap <leader>n :enew<CR>$/;"	m
<leader>nw	mac_os/.vimrc	/^nnoremap <leader>nw :set nowrap<CR>$/;"	m
<leader>o	mac_os/.vimrc	/^noremap <silent> <leader>o :!open %<CR>$/;"	m
<leader>q	mac_os/.vimrc	/^noremap <leader>q :clo<CR>$/;"	m
<leader>rf	mac_os/.vimrc	/^nnoremap <leader>rf gg=G$/;"	m
<leader>rr	mac_os/.vimrc	/^nnoremap <leader>rr :silent call KeywordsAll()<CR> :%s#\\<<C-r>=expand("<cword>")<CR>\\>#$/;"	m
<leader>rt	mac_os/.vimrc	/^nnoremap <leader>rt :retab!<CR>$/;"	m
<leader>s	mac_os/.vimrc	/^noremap <leader>s :vsplit<cr>$/;"	m
<leader>sh	mac_os/.vimrc	/^nnoremap <leader>sh :call <SID>SynStack()<CR>$/;"	m
<leader>src	mac_os/.vimrc	/^nnoremap <leader>src :source %<CR>$/;"	m
<leader>ss	mac_os/.vimrc	/^noremap <leader>ss :call StripWhitespace()<CR>$/;"	m
<leader>t"	mac_os/.vimrc	/^noremap <silent> <leader>t" :Tabularize \/"<CR>$/;"	m
<leader>t'	mac_os/.vimrc	/^noremap <silent> <leader>t' :Tabularize \/'<CR>$/;"	m
<leader>t,	mac_os/.vimrc	/^noremap <silent> <leader>t, :Tabularize \/,<CR>$/;"	m
<leader>t/	mac_os/.vimrc	/^noremap <silent> <leader>t\/ :Tabularize \/\/\/<CR>$/;"	m
<leader>t:	mac_os/.vimrc	/^noremap <silent> <leader>t: :Tabularize \/:<CR>$/;"	m
<leader>t=	mac_os/.vimrc	/^noremap <silent> <leader>t= :Tabularize \/=<CR>$/;"	m
<leader>t[	mac_os/.vimrc	/^noremap <silent> <leader>t[ :Tabularize \/[<CR>$/;"	m
<leader>t\\|	mac_os/.vimrc	/^noremap <silent> <leader>t\\| :Tabularize \/\\|<CR>$/;"	m
<leader>tf	mac_os/.vimrc	/^noremap <silent> <leader>tf :CtrlPClearCache<CR>$/;"	m
<leader>ts	mac_os/.vimrc	/^nnoremap <silent> <leader>ts :set spell!<CR>$/;"	m
<leader>tt	mac_os/.vimrc	/^noremap <silent> <leader>tt :CtrlP<CR>$/;"	m
<leader>tw	mac_os/.vimrc	/^nnoremap <leader>tw gqip$/;"	m
<leader>t{	mac_os/.vimrc	/^noremap <silent> <leader>t{ :Tabularize \/{<CR>$/;"	m
<leader>v	mac_os/.vimrc	/^nnoremap <leader>v :e $MYVIMRC<CR>$/;"	m
<leader>v	mac_os/.vimrc	/^nnoremap <leader>v `[v`]$/;"	m
<space>	mac_os/.vimrc	/^nnoremap <space> za$/;"	m
<up>	mac_os/.vimrc	/^nnoremap <up> gk$/;"	m
?	mac_os/.vimrc	/^map ?  <Plug>(incsearch-backward)$/;"	m
Bd	mac_os/.vimrc	/^command! Bd bd$/;"	c
D	mac_os/.vimrc	/^vmap  <expr>  D          DVB_Duplicate()$/;"	m
IncludeStatic	mac_os/.vimrc	/^function! IncludeStatic()$/;"	f
KeywordsAll	mac_os/.vimrc	/^function! KeywordsAll()$/;"	f
KeywordsBasic	mac_os/.vimrc	/^function! KeywordsBasic()$/;"	f
N	mac_os/.vimrc	/^map N  <Plug>(incsearch-nohl-N)$/;"	m
NERDRemoveExtraSpaces	mac_os/.vimrc	/^let NERDRemoveExtraSpaces=1$/;"	v
NERDSpaceDelims	mac_os/.vimrc	/^let NERDSpaceDelims=1               " space around delimiters$/;"	v
NERDTreeHighlightCursorline	mac_os/.vimrc	/^let NERDTreeHighlightCursorline=1   "Highlight the selected entry in the tree$/;"	v
NERDTreeHighlightFile	mac_os/.vimrc	/^function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)$/;"	f
NERDTreeIgnore	mac_os/.vimrc	/^let NERDTreeIgnore=['.DS_Store']$/;"	v
NERDTreeIgnore	mac_os/.vimrc	/^let NERDTreeIgnore=['\\.pyc$']$/;"	v
NERDTreeMinimalUI	mac_os/.vimrc	/^let NERDTreeMinimalUI=0$/;"	v
NERDTreeShowBookmarks	mac_os/.vimrc	/^let NERDTreeShowBookmarks=0         "show bookmarks on startup$/;"	v
NERDTreeShowHidden	mac_os/.vimrc	/^let NERDTreeShowHidden=1$/;"	v
NERDTreeShowLineNumbers	mac_os/.vimrc	/^let NERDTreeShowLineNumbers=0$/;"	v
RunPython	mac_os/.vimrc	/^function! RunPython()$/;"	f
S	mac_os/.vimrc	/^nnoremap S i<cr><esc><right>$/;"	m
SanitizeMdown	mac_os/.vimrc	/^function! SanitizeMdown()$/;"	f
StripWhitespace	mac_os/.vimrc	/^function! StripWhitespace ()$/;"	f
SynStack	mac_os/.vimrc	/^function! <SID>SynStack()$/;"	f
ToggleExpandTab	mac_os/.vimrc	/^function! ToggleExpandTab()$/;"	f
W	mac_os/.vimrc	/^command! W w$/;"	c
Wq	mac_os/.vimrc	/^command! Wq wq$/;"	c
\\	mac_os/.vimrc	/^nnoremap <silent> \\ :silent nohlsearch<CR>$/;"	m
g#	mac_os/.vimrc	/^map g# <Plug>(incsearch-nohl-g#)$/;"	m
g*	mac_os/.vimrc	/^map g* <Plug>(incsearch-nohl-g*)$/;"	m
g/	mac_os/.vimrc	/^map g\/ <Plug>(incsearch-stay)$/;"	m
g:ConqueTerm_CloseOnEnd	mac_os/.vimrc	/^let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_StartMessages	mac_os/.vimrc	/^let g:ConqueTerm_StartMessages = 0$/;"	v
g:DVB_TrimWS	mac_os/.vimrc	/^let g:DVB_TrimWS = 1$/;"	v
g:DevIconsDefaultFolderOpenSymbol	mac_os/.vimrc	/^let g:DevIconsDefaultFolderOpenSymbol = 'ƛ'$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	mac_os/.vimrc	/^let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFoldersOpenClose	mac_os/.vimrc	/^let g:DevIconsEnableFoldersOpenClose = 1$/;"	v
g:EasyMotion_leader_key	mac_os/.vimrc	/^let g:EasyMotion_leader_key = '<leader>m'$/;"	v
g:EasyMotion_mapping_F	mac_os/.vimrc	/^let g:EasyMotion_mapping_F = '<leader>mm'$/;"	v
g:EasyMotion_mapping_f	mac_os/.vimrc	/^let g:EasyMotion_mapping_f = '<leader>em'$/;"	v
g:LustyJugglerSuppressRubyWarning	mac_os/.vimrc	/^let g:LustyJugglerSuppressRubyWarning = 1  " avoid error if running on terminal$/;"	v
g:NERDCustomDelimiters	mac_os/.vimrc	/^let g:NERDCustomDelimiters = {$/;"	v
g:NERDTreeDirArrowCollapsible	mac_os/.vimrc	/^let g:NERDTreeDirArrowCollapsible = '▾'$/;"	v
g:NERDTreeDirArrowExpandable	mac_os/.vimrc	/^let g:NERDTreeDirArrowExpandable = '▸'$/;"	v
g:NERDTreeExactMatchHighlightFullName	mac_os/.vimrc	/^let g:NERDTreeExactMatchHighlightFullName = 1$/;"	v
g:NERDTreeFileExtensionHighlightFullName	mac_os/.vimrc	/^let g:NERDTreeFileExtensionHighlightFullName = 1$/;"	v
g:NERDTreeGitStatusConcealBrackets	mac_os/.vimrc	/^let g:NERDTreeGitStatusConcealBrackets = 1$/;"	v
g:NERDTreeGitStatusIndicatorMapCustom	mac_os/.vimrc	/^let g:NERDTreeGitStatusIndicatorMapCustom = {$/;"	v
g:NERDTreeGitStatusUseNerdFonts	mac_os/.vimrc	/^let g:NERDTreeGitStatusUseNerdFonts = 1$/;"	v
g:NERDTreePatternMatchHighlightFullName	mac_os/.vimrc	/^let g:NERDTreePatternMatchHighlightFullName = 1$/;"	v
g:Powerline_symbols	mac_os/.vimrc	/^let g:Powerline_symbols = 'fancy'$/;"	v
g:SimpylFold_docstring_preview	mac_os/.vimrc	/^let g:SimpylFold_docstring_preview=1$/;"	v
g:SuperTabDefaultCompletionType	mac_os/.vimrc	/^let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	mac_os/.vimrc	/^let g:SuperTabLongestEnhanced = 1$/;"	v
g:SuperTabMappingBackward	mac_os/.vimrc	/^let g:SuperTabMappingBackward = '<s-c-Tab>'$/;"	v
g:SuperTabMappingForward	mac_os/.vimrc	/^let g:SuperTabMappingForward = '<s-Tab>'$/;"	v
g:WebDevIconsDisableDefaultFileSymbolColorFromNERDTreeFile	mac_os/.vimrc	/^let g:WebDevIconsDisableDefaultFileSymbolColorFromNERDTreeFile = 1$/;"	v
g:WebDevIconsDisableDefaultFolderSymbolColorFromNERDTreeDir	mac_os/.vimrc	/^let g:WebDevIconsDisableDefaultFolderSymbolColorFromNERDTreeDir = 1$/;"	v
g:WebDevIconsOS	mac_os/.vimrc	/^let g:WebDevIconsOS = 'Darwin'$/;"	v
g:WebDevIconsUnicodeDecorateFileNodes	mac_os/.vimrc	/^let g:WebDevIconsUnicodeDecorateFileNodes = 1$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodes	mac_os/.vimrc	/^let g:WebDevIconsUnicodeDecorateFolderNodes = 1     " enable folder\/directory glyph flag (disab/;"	v
g:airline#extensions#bookmark#enabled	mac_os/.vimrc	/^let g:airline#extensions#bookmark#enabled = 1$/;"	v
g:airline#extensions#coc#enabled	mac_os/.vimrc	/^let g:airline#extensions#coc#enabled = 1$/;"	v
g:airline#extensions#fugitiveline#enabled	mac_os/.vimrc	/^let g:airline#extensions#fugitiveline#enabled = 1$/;"	v
g:airline#extensions#fzf#enabled	mac_os/.vimrc	/^let g:airline#extensions#fzf#enabled = 1$/;"	v
g:airline#extensions#gutentags#enabled	mac_os/.vimrc	/^let g:airline#extensions#gutentags#enabled = 1$/;"	v
g:airline#extensions#keymap#enabled	mac_os/.vimrc	/^let g:airline#extensions#keymap#enabled = 1$/;"	v
g:airline#extensions#nerdtree_statusline	mac_os/.vimrc	/^let g:airline#extensions#nerdtree_statusline = 1$/;"	v
g:airline#extensions#syntastic#enabled	mac_os/.vimrc	/^let g:airline#extensions#syntastic#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	mac_os/.vimrc	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#left_alt_sep	mac_os/.vimrc	/^let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_sep	mac_os/.vimrc	/^let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#parts#ffenc#skip_expected_string	mac_os/.vimrc	/^let g:airline#parts#ffenc#skip_expected_string='utf-8[unix]'$/;"	v
g:airline_detect_spell	mac_os/.vimrc	/^let g:airline_detect_spell=0$/;"	v
g:airline_left_sep	mac_os/.vimrc	/^let g:airline_left_sep = '»'$/;"	v
g:airline_left_sep	mac_os/.vimrc	/^let g:airline_left_sep = '▶'$/;"	v
g:airline_powerline_fonts	mac_os/.vimrc	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_right_sep	mac_os/.vimrc	/^let g:airline_right_sep = '«'$/;"	v
g:airline_right_sep	mac_os/.vimrc	/^let g:airline_right_sep = '◀'$/;"	v
g:airline_section_y	mac_os/.vimrc	/^let g:airline_section_y = 'BN: %{bufnr("%")}'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^      let g:airline_symbols = {}$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.branch = '⎇'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.colnr = ' ℅:'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.colnr = ' ㏇:'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.crypt = '🔒'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.linenr = ' ␊:'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.linenr = ' ␤:'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.linenr = '¶'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.linenr = '☰'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.maxlinenr = ''$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.maxlinenr = '㏑'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.notexists = 'Ɇ'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.paste = 'Þ'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.paste = 'ρ'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.paste = '∥'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.spell = 'Ꞩ'$/;"	v
g:airline_symbols	mac_os/.vimrc	/^let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:airline_theme	mac_os/.vimrc	/^let g:airline_theme = 'ayu_dark'$/;"	v
g:closetag_default_xml	mac_os/.vimrc	/^let g:closetag_default_xml=1$/;"	v
g:closetag_html_style	mac_os/.vimrc	/^let g:closetag_html_style=1$/;"	v
g:cssColorVimDoNotMessMyUpdatetime	mac_os/.vimrc	/^let g:cssColorVimDoNotMessMyUpdatetime = 1$/;"	v
g:ctrlp_switch_buffer	mac_os/.vimrc	/^let g:ctrlp_switch_buffer = 0$/;"	v
g:ctrlp_working_path_mode	mac_os/.vimrc	/^let g:ctrlp_working_path_mode = 0$/;"	v
g:fzf_buffers_jump	mac_os/.vimrc	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_commands_expect	mac_os/.vimrc	/^let g:fzf_commands_expect = 'alt-enter,ctrl-x'$/;"	v
g:fzf_tags_command	mac_os/.vimrc	/^let g:fzf_tags_command = 'ctags -R --options="main.ctags"'$/;"	v
g:gruvbox_contrast_dark	mac_os/.vimrc	/^let g:gruvbox_contrast_dark = 'hard'$/;"	v
g:gruvbox_improved_strings	mac_os/.vimrc	/^let g:gruvbox_improved_strings = 1$/;"	v
g:gruvbox_improved_warnings	mac_os/.vimrc	/^let g:gruvbox_improved_warnings = 1$/;"	v
g:gruvbox_invert_tabline	mac_os/.vimrc	/^let g:gruvbox_invert_tabline = 1$/;"	v
g:gundo_preview_bottom	mac_os/.vimrc	/^let g:gundo_preview_bottom = 1$/;"	v
g:gundo_right	mac_os/.vimrc	/^let g:gundo_right = 1$/;"	v
g:incsearch#auto_nohlsearch	mac_os/.vimrc	/^let g:incsearch#auto_nohlsearch = 1$/;"	v
g:indentLine_char	mac_os/.vimrc	/^let g:indentLine_char='¦'       " Support any ASCII code, can also use special characters: ¦, /;"	v
g:indentLine_enabled	mac_os/.vimrc	/^let g:indentLine_enabled = 1    " Make indentline effective$/;"	v
g:javascript_conceal_NaN	mac_os/.vimrc	/^let g:javascript_conceal_NaN                  = "ℕ"$/;"	v
g:javascript_conceal_arrow_function	mac_os/.vimrc	/^let g:javascript_conceal_arrow_function       = "⇒"$/;"	v
g:javascript_conceal_function	mac_os/.vimrc	/^let g:javascript_conceal_function             = "ƒ"$/;"	v
g:javascript_conceal_noarg_arrow_function	mac_os/.vimrc	/^let g:javascript_conceal_noarg_arrow_function = "🞅"$/;"	v
g:javascript_conceal_null	mac_os/.vimrc	/^let g:javascript_conceal_null                 = "ø"$/;"	v
g:javascript_conceal_prototype	mac_os/.vimrc	/^let g:javascript_conceal_prototype            = "¶"$/;"	v
g:javascript_conceal_return	mac_os/.vimrc	/^let g:javascript_conceal_return               = "⇚"$/;"	v
g:javascript_conceal_static	mac_os/.vimrc	/^let g:javascript_conceal_static               = "•"$/;"	v
g:javascript_conceal_super	mac_os/.vimrc	/^let g:javascript_conceal_super                = "Ω"$/;"	v
g:javascript_conceal_this	mac_os/.vimrc	/^let g:javascript_conceal_this                 = "@"$/;"	v
g:javascript_conceal_undefined	mac_os/.vimrc	/^let g:javascript_conceal_undefined            = "¿"$/;"	v
g:javascript_conceal_underscore_arrow_function	mac_os/.vimrc	/^let g:javascript_conceal_underscore_arrow_function = "🞅"$/;"	v
g:javascript_plugin_flow	mac_os/.vimrc	/^let g:javascript_plugin_flow = 1$/;"	v
g:javascript_plugin_jsdoc	mac_os/.vimrc	/^let g:javascript_plugin_jsdoc = 1$/;"	v
g:jedi#completions_command	mac_os/.vimrc	/^let g:jedi#completions_command = '<C-Space>'$/;"	v
g:jedi#documentation_command	mac_os/.vimrc	/^let g:jedi#documentation_command = 'K'$/;"	v
g:jedi#environment_path	mac_os/.vimrc	/^let g:jedi#environment_path ='\/usr\/local\/bin\/python3.9'$/;"	v
g:jedi#goto_assignments_command	mac_os/.vimrc	/^let g:jedi#goto_assignments_command = '<leader>g'$/;"	v
g:jedi#goto_command	mac_os/.vimrc	/^let g:jedi#goto_command = '<leader>d'$/;"	v
g:jedi#goto_definitions_command	mac_os/.vimrc	/^let g:jedi#goto_definitions_command = ""$/;"	v
g:jedi#goto_stubs_command	mac_os/.vimrc	/^let g:jedi#goto_stubs_command = '<leader>s'$/;"	v
g:jedi#popup_on_dot	mac_os/.vimrc	/^let g:jedi#popup_on_dot = 1$/;"	v
g:jedi#popup_select_first	mac_os/.vimrc	/^let g:jedi#popup_select_first = 0$/;"	v
g:jedi#rename_command	mac_os/.vimrc	/^let g:jedi#rename_command = '<leader>r'$/;"	v
g:jedi#usages_command	mac_os/.vimrc	/^let g:jedi#usages_command = '<leader>nu'$/;"	v
g:jscomplete_use	mac_os/.vimrc	/^let g:jscomplete_use = ['dom', 'moz']$/;"	v
g:nerdtree_tabs_open_on_console_startup	mac_os/.vimrc	/^let g:nerdtree_tabs_open_on_console_startup=1$/;"	v
g:node_usejscomplete	mac_os/.vimrc	/^let g:node_usejscomplete = 1$/;"	v
g:pymode_breakpoint	mac_os/.vimrc	/^let g:pymode_breakpoint = 1$/;"	v
g:pymode_breakpoint_key	mac_os/.vimrc	/^let g:pymode_breakpoint_key = '<leader>b'$/;"	v
g:pymode_doc	mac_os/.vimrc	/^let g:pymode_doc = 0$/;"	v
g:pymode_doc_key	mac_os/.vimrc	/^let g:pymode_doc_key = 'K'$/;"	v
g:pymode_folding	mac_os/.vimrc	/^let g:pymode_folding = 0$/;"	v
g:pymode_lint	mac_os/.vimrc	/^let g:pymode_lint = 1$/;"	v
g:pymode_lint_checker	mac_os/.vimrc	/^let g:pymode_lint_checker = "pyflakes, pep8"$/;"	v
g:pymode_lint_ignore	mac_os/.vimrc	/^let g:pymode_lint_ignore="E501,W601,C0110"$/;"	v
g:pymode_lint_write	mac_os/.vimrc	/^let g:pymode_lint_write = 1$/;"	v
g:pymode_rope	mac_os/.vimrc	/^let g:pymode_rope = 0$/;"	v
g:pymode_rope_complete_on_dot	mac_os/.vimrc	/^let g:pymode_rope_complete_on_dot = 0$/;"	v
g:pymode_rope_completion	mac_os/.vimrc	/^let g:pymode_rope_completion = 0$/;"	v
g:pymode_run	mac_os/.vimrc	/^let g:pymode_run = 0$/;"	v
g:pymode_syntax	mac_os/.vimrc	/^let g:pymode_syntax = 1$/;"	v
g:pymode_syntax_all	mac_os/.vimrc	/^let g:pymode_syntax_all = 1$/;"	v
g:pymode_syntax_indent_errors	mac_os/.vimrc	/^let g:pymode_syntax_indent_errors = g:pymode_syntax_all$/;"	v
g:pymode_syntax_space_errors	mac_os/.vimrc	/^let g:pymode_syntax_space_errors = g:pymode_syntax_all$/;"	v
g:pymode_virtualenv	mac_os/.vimrc	/^let g:pymode_virtualenv = 1$/;"	v
g:python3_host_prog	mac_os/.vimrc	/^let g:python3_host_prog='\/usr\/local\/bin\/python3.9'$/;"	v
g:rainbow_active	mac_os/.vimrc	/^let g:rainbow_active = 0$/;"	v
g:rainbow_ctermfgs	mac_os/.vimrc	/^let g:rainbow_ctermfgs = ['lightblue', 'lightgreen', 'yellow', 'red', 'magenta']$/;"	v
g:rainbow_guifgs	mac_os/.vimrc	/^let g:rainbow_guifgs = ['RoyalBlue3', 'DarkOrange3', 'DarkOrchid3', 'FireBrick']$/;"	v
g:rainbow_load_separately	mac_os/.vimrc	/^let g:rainbow_load_separately = [$/;"	v
g:signify_update_on_focusgained	mac_os/.vimrc	/^let g:signify_update_on_focusgained = 1$/;"	v
g:snips_author	mac_os/.vimrc	/^let g:snips_author = 'Miller Medeiros'$/;"	v
g:sparkupNextMapping	mac_os/.vimrc	/^let g:sparkupNextMapping='<c-l>'$/;"	v
g:statline_filename_relative	mac_os/.vimrc	/^let g:statline_filename_relative = 1$/;"	v
g:statline_fugitive	mac_os/.vimrc	/^let g:statline_fugitive = 1$/;"	v
g:statline_mixed_indent_string	mac_os/.vimrc	/^let g:statline_mixed_indent_string = '[mix]'$/;"	v
g:syntastic_auto_loc_list	mac_os/.vimrc	/^let g:syntastic_auto_loc_list=2$/;"	v
g:syntastic_check_on_open	mac_os/.vimrc	/^let g:syntastic_check_on_open=1$/;"	v
g:syntastic_javascript_checkers	mac_os/.vimrc	/^let g:syntastic_javascript_checkers = ['eslint']$/;"	v
g:syntastic_javascript_eslint_exec	mac_os/.vimrc	/^let g:syntastic_javascript_eslint_exec = 'eslintme'$/;"	v
g:syntastic_javascript_eslint_generic	mac_os/.vimrc	/^let g:syntastic_javascript_eslint_generic = 1$/;"	v
g:tagbar_ctags_bin	mac_os/.vimrc	/^let g:tagbar_ctags_bin = '\/usr\/local\/bin\/ctags'$/;"	v
g:tagbar_file_size_limit	mac_os/.vimrc	/^let g:tagbar_file_size_limit = '100000' $/;"	v
g:vim_ctags__relative	mac_os/.vimrc	/^let g:vim_ctags__relative = 'always'      "tagpath relative to tags index file$/;"	v
g:vim_ctags__totals	mac_os/.vimrc	/^let g:vim_ctags__totals   = 'yes'         "display reporting after build$/;"	v
g:vim_tags_ignore_files	mac_os/.vimrc	/^let g:vim_tags_ignore_files = ['.gitignore', '.svnignore', '.cvsignore', '*.pyc']$/;"	v
g:vue_pre_processors	mac_os/.vimrc	/^let g:vue_pre_processors = 'detect_on_enter'$/;"	v
g:vue_pre_processors	mac_os/.vimrc	/^let g:vue_pre_processors = []       " no preprocessors for memory save (options: 'pug', 'scss')$/;"	v
g:webdevicons_conceal_nerdtree_brackets	mac_os/.vimrc	/^let g:webdevicons_conceal_nerdtree_brackets = 1$/;"	v
g:webdevicons_enable	mac_os/.vimrc	/^let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	mac_os/.vimrc	/^let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	mac_os/.vimrc	/^let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_flagship_statusline	mac_os/.vimrc	/^let g:webdevicons_enable_flagship_statusline = 1$/;"	v
g:webdevicons_enable_nerdtree	mac_os/.vimrc	/^let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_startify	mac_os/.vimrc	/^let g:webdevicons_enable_startify = 1$/;"	v
g:webdevicons_enable_vimfiler	mac_os/.vimrc	/^let g:webdevicons_enable_vimfiler = 1$/;"	v
html_no_rendering	mac_os/.vimrc	/^let html_no_rendering=1$/;"	v
j	mac_os/.vimrc	/^nnoremap j gj$/;"	m
javascript_enable_domhtmlcss	mac_os/.vimrc	/^let javascript_enable_domhtmlcss=1$/;"	v
jj	mac_os/.vimrc	/^inoremap jj <ESC>$/;"	m
jk	mac_os/.vimrc	/^inoremap jk <Esc>$/;"	m
k	mac_os/.vimrc	/^nnoremap k gk$/;"	m
mapleader	mac_os/.vimrc	/^let mapleader=","$/;"	v
maplocalleader	mac_os/.vimrc	/^let maplocalleader=";"$/;"	v
mm_buf_cmds	mac_os/.vimrc	/^augroup mm_buf_cmds$/;"	a
n	mac_os/.vimrc	/^map n  <Plug>(incsearch-nohl-n)$/;"	m
